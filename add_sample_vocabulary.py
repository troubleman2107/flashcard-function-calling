#!/usr/bin/env python3
"""
Script ƒë·ªÉ th√™m t·ª´ v·ª±ng m·∫´u cho c√°c categories
"""

import requests
import json
import time

# API endpoint
API_URL = "http://localhost:6969/api/chat"

# Sample vocabulary data for different categories
SAMPLE_VOCABULARY = {
    "Travel": [
        "vacation", "hotel", "passport", "luggage", "destination"
    ],
    "Technology": [
        "software", "internet", "smartphone", "database", "algorithm"
    ],
    "Food": [
        "restaurant", "delicious", "recipe", "ingredient", "nutrition"
    ],
    "Business": [
        "meeting", "profit", "customer", "marketing", "investment"
    ],
    "Health": [
        "exercise", "medicine", "hospital", "doctor", "healthy"
    ],
    "Education": [
        "student", "teacher", "university", "knowledge", "learning"
    ],
    "Sports": [
        "football", "training", "competition", "athlete", "victory"
    ],
    "Entertainment": [
        "movie", "music", "concert", "theater", "performance"
    ],
    "Nature": [
        "forest", "mountain", "ocean", "wildlife", "environment"
    ],
    "Family": [
        "parents", "children", "relatives", "wedding", "birthday"
    ]
}

def add_word_to_flashcard(word):
    """Th√™m m·ªôt t·ª´ v√†o flashcard th√¥ng qua API"""
    try:
        payload = {
            "message": word,
            "type": "word"
        }
        
        response = requests.post(API_URL, json=payload, timeout=30)
        data = response.json()
        
        if data.get("success"):
            print(f"‚úÖ ƒê√£ th√™m t·ª´ '{word}' th√†nh c√¥ng!")
            return True
        else:
            print(f"‚ùå L·ªói th√™m t·ª´ '{word}': {data.get('message', 'Unknown error')}")
            return False
            
    except Exception as e:
        print(f"‚ùå Exception khi th√™m t·ª´ '{word}': {str(e)}")
        return False

def add_category_words(category, words):
    """Th√™m t·∫•t c·∫£ t·ª´ v·ª±ng c·ªßa m·ªôt category"""
    print(f"\nüè∑Ô∏è ƒêang th√™m t·ª´ v·ª±ng cho category: {category}")
    print("=" * 50)
    
    success_count = 0
    for word in words:
        if add_word_to_flashcard(word):
            success_count += 1
        
        # Delay ƒë·ªÉ tr√°nh spam API
        time.sleep(2)
    
    print(f"\nüìä K·∫øt qu·∫£ category {category}: {success_count}/{len(words)} t·ª´ th√†nh c√¥ng")
    return success_count

def main():
    """Main function"""
    print("üöÄ B·∫Øt ƒë·∫ßu th√™m t·ª´ v·ª±ng m·∫´u cho c√°c categories...")
    print("‚è∞ Qu√° tr√¨nh n√†y c√≥ th·ªÉ m·∫•t v√†i ph√∫t...")
    
    total_success = 0
    total_words = 0
    
    for category, words in SAMPLE_VOCABULARY.items():
        success_count = add_category_words(category, words)
        total_success += success_count
        total_words += len(words)
        
        # Delay gi·ªØa c√°c categories
        time.sleep(3)
    
    print("\n" + "=" * 60)
    print(f"üéâ HO√ÄN TH√ÄNH!")
    print(f"üìà T·ªïng k·∫øt: {total_success}/{total_words} t·ª´ ƒë∆∞·ª£c th√™m th√†nh c√¥ng")
    print(f"üìä T·ª∑ l·ªá th√†nh c√¥ng: {(total_success/total_words)*100:.1f}%")
    
    if total_success > 0:
        print(f"\n‚ú® B√¢y gi·ªù b·∫°n c√≥ th·ªÉ test semantic search v·ªõi:")
        print("   - 't·ª´ v·ªÅ du l·ªãch' (Travel)")
        print("   - 'c√¥ng ngh·ªá m√°y t√≠nh' (Technology)")
        print("   - 't·ª´ v·ª±ng ƒÉn u·ªëng' (Food)")
        print("   - 'business terms' (Business)")
        print("   - 'health and medical' (Health)")

if __name__ == "__main__":
    main()